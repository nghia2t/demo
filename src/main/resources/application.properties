quarkus.http.root-path = /api

quarkus.container-image.build=true


## kubernetes
quarkus.datasource.db-kind=postgresql
#quarkus.datasource.username=${DATABASE_USERNAME}
#quarkus.datasource.password=${DATABASE_PASSWORD}
#quarkus.datasource.jdbc.url=${DATABASE_JDBC_URL}
quarkus.datasource.username=postgres
quarkus.datasource.password=root
quarkus.datasource.jdbc.url=jdbc:postgresql://postgres:5432/user
quarkus.datasource.jdbc.max-size=16
quarkus.hibernate-orm.database.generation=update
# OIDC Configuration
#quarkus.oidc.auth-server-url=${OIDC_AUTH_SERVER_URL}
#quarkus.oidc.client-id=${OIDC_CLIENT_ID}
#quarkus.oidc.credentials.secret=${OIDC_TOKEN_ISSUER}
quarkus.oidc.auth-server-url=https://keycloak:8543/auth/realms/quarkus
quarkus.oidc.client-id=backend-service
quarkus.oidc.credentials.secret=secret
quarkus.oidc.tls.verification=none

# Enable Policy Enforcement
quarkus.keycloak.policy-enforcer.enable=true
quarkus.keycloak.policy-enforcer.lazy-load-paths=false

## dev
%dev.quarkus.datasource.db-kind=postgresql
%dev.quarkus.datasource.username=postgres
%dev.quarkus.datasource.password=root
%dev.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/user

%dev.quarkus.oidc.auth-server-url=https://localhost:8543/auth/realms/quarkus
%dev.quarkus.oidc.client-id=backend-service
%dev.quarkus.oidc.credentials.secret=secret
%dev.quarkus.oidc.tls.verification=none

## test
%test.quarkus.datasource.db-kind=h2
%test.quarkus.datasource.username=sa
%test.quarkus.datasource.password=password
%test.quarkus.datasource.jdbc.url=jdbc:h2:mem:testdb
%test.quarkus.datasource.jdbc.driver=org.h2.Driver

%test.quarkus.oidc.auth-server-url=https://localhost:8543/auth/realms/quarkus
%test.quarkus.oidc.client-id=backend-service
%test.quarkus.oidc.credentials.secret=secret
%test.quarkus.oidc.tls.verification=none